name: Node.js CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.18'

      # Install Dependencies
      - name: Install Dependencies
        run: npm install

      # Build the app (Optional)
      - name: Build the App
        run: npm run build

      # Log in to GitHub Container Registry (GHCR)
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin

      # Build and Push Docker Image
      - name: Build and Push Docker Image
        run: |
          docker build -t ghcr.io/${{ secrets.GHCR_USERNAME }}/data-cleansing-server:latest .
          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/data-cleansing-server:latest

  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Export GHCR_USERNAME to environment variables
      - name: Export GHCR_USERNAME
        run: echo "GHCR_USERNAME=${{ secrets.GHCR_USERNAME }}" >> $GITHUB_ENV

      # Log in to GitHub Container Registry (GHCR)
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin

      # Pull Docker images using Docker Compose
      - name: Pull Docker Images
        run: docker compose pull

      # Start the application with Docker Compose
      - name: Start Application with Docker Compose
        run: docker compose up -d --remove-orphans
